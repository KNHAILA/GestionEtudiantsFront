[{"C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\index.js":"1","C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\reportWebVitals.js":"2","C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\App.js":"3","C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\Components\\Statistiques\\notes.js":"4"},{"size":517,"mtime":1609687139835,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1609687139851,"results":"7","hashOfConfig":"6"},{"size":193,"mtime":1611847160084,"results":"8","hashOfConfig":"6"},{"size":5626,"mtime":1611847160106,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"owvmcw",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\index.js",[],["20","21"],"C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\reportWebVitals.js",[],"C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\App.js",[],"C:\\Users\\MinaGH\\Desktop\\Project-JEE\\src\\Components\\Statistiques\\notes.js",["22"],"import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '../../nested.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\nconst MyList = styled(ListItem)({\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n});\r\n\r\nexport default function Notes() {\r\n    const classes = useStyles();\r\n    const [semestres, setSemestres] = React.useState([\r\n\r\n        {\r\n            id: \"1\",\r\n            code: \"Semestre 1\",\r\n            open: false,\r\n            modules: [\r\n                {\r\n                    id: \"0\",\r\n                    nom: \"module 1\",\r\n                    note: \"15\",\r\n                    absence: \"2\"\r\n                },\r\n                {\r\n                    id: \"3\",\r\n                    nom: \"module 2\",\r\n                    note: \"15\",\r\n                    absence: \"2\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: \"2\",\r\n            code: \"Semestre 2\",\r\n            open: false,\r\n            modules: [\r\n                {\r\n                    id: \"1\",\r\n                    nom: \"module 1\",\r\n                    note: \"12\",\r\n                    absence: \"2\"\r\n                },\r\n                {\r\n                    id: \"2\",\r\n                    nom: \"module 2\",\r\n                    note: \"16\",\r\n                    absence: \"2\"\r\n                }\r\n            ]\r\n        }\r\n    ])\r\n\r\n    const handleClick = (id) => {\r\n        semestres && semestres.map(sem => {\r\n            if (sem.id === id) {\r\n                sem.open = !sem.open;\r\n            }\r\n        })\r\n        setSemestres([...semestres])\r\n\r\n\r\n    };\r\n\r\n    return (\r\n    <div className=\"services\">\r\n        <List \r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                    NOTES\r\n        </ListSubheader>\r\n            }\r\n            className={classes.root}\r\n        >\r\n            {semestres && semestres.map(sem => {\r\n\r\n                return (\r\n                    <div className=\"center\">\r\n\r\n                        <MyList className=\"list\" button onClick={() => handleClick(sem.id)}>\r\n\r\n                            <ListItemText id=\"sem\" primary={sem.code.toUpperCase()} />\r\n                            {sem.open ? <ExpandLess /> : <ExpandMore />}\r\n                        </MyList><br />\r\n                        <Collapse in={sem.open} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n\r\n                                <TableContainer component={Paper}>\r\n                                    <Table className={classes.table} aria-label=\"customized table\">\r\n                                        <TableRow>\r\n                                            <StyledTableCell id=\"nested-list-subheader\">MODULE</StyledTableCell>\r\n                                            <StyledTableCell id=\"nested-list-subheader\" align=\"right\">NOTE</StyledTableCell>\r\n                                        </TableRow>\r\n                                        <TableBody>\r\n                                            {sem.modules && sem.modules.map(module => {\r\n                                                return (\r\n                                                    <StyledTableRow key={module.id}>\r\n\r\n                                                        <StyledTableCell component=\"th\" scope=\"row\">{module.nom}</StyledTableCell>\r\n                                                        <StyledTableCell align=\"right\">{module.note}</StyledTableCell>\r\n                                                    </StyledTableRow>\r\n                                                )\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </List>\r\n                        </Collapse>\r\n\r\n\r\n\r\n                    </div>)\r\n            })\r\n            }\r\n        </List >\r\n</div>\r\n    );\r\n    \r\n}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":102,"column":40,"nodeType":"29","messageId":"30","endLine":102,"endColumn":42},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]